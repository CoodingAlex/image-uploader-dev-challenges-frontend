[{"D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\index.js":"1","D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\containers\\App.js":"2","D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\components\\Upload.js":"3","D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\components\\Loading.js":"4","D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\components\\Uploaded.js":"5","D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\components\\DragAndDrop.js":"6","D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\utils\\api\\upload.js":"7","D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\utils\\CopyFromInput.js":"8","D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\utils\\validateExtension.js":"9"},{"size":190,"mtime":1613214928343,"results":"10","hashOfConfig":"11"},{"size":791,"mtime":1613223942430,"results":"12","hashOfConfig":"11"},{"size":1612,"mtime":1613252048021,"results":"13","hashOfConfig":"11"},{"size":354,"mtime":1613218055584,"results":"14","hashOfConfig":"11"},{"size":910,"mtime":1613223992281,"results":"15","hashOfConfig":"11"},{"size":1568,"mtime":1613252038461,"results":"16","hashOfConfig":"11"},{"size":321,"mtime":1613252077990,"results":"17","hashOfConfig":"11"},{"size":228,"mtime":1613220756914,"results":"18","hashOfConfig":"11"},{"size":228,"mtime":1613226283542,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"56sbdq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\index.js",[],["42","43"],"D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\containers\\App.js",["44","45"],"import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport Upload from '../components/Upload'\r\nimport Loading from '../components/Loading'\r\nimport Uploaded from '../components/Uploaded'\r\n\r\nimport '../assets/styles/App.css'\r\n\r\nconst App = (props) => {\r\n  const [image, setImage] = useState()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isUploaded, setIsUploaded] = useState(false)\r\n  const [imageUrl, setImageUrl] = useState()\r\n\r\n  return (\r\n    <div className={'container'}>\r\n      {!isLoading && !isUploaded && (\r\n        <Upload setters={{ setImageUrl, setIsLoading, setIsUploaded }} />\r\n      )}\r\n      {isLoading && !isUploaded && <Loading />}\r\n      {!isLoading && isUploaded && <Uploaded imageUrl={imageUrl} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\components\\Upload.js",[],"D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\components\\Loading.js",[],"D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\components\\Uploaded.js",["46","47"],"import React from 'react'\r\nimport checkIcon from '../assets/images/check.svg'\r\nimport imagenPrueba from '../assets/images/kermit.jpg'\r\nimport '../assets/styles/uploaded.css'\r\n\r\nimport copyFromInput from '../utils/CopyFromInput'\r\n\r\nconst Uploaded = (props) => {\r\n  return (\r\n    <div className={'principal-container-uploaded'}>\r\n      <img className={'checkIconImg'} src={checkIcon} />\r\n      <p className={'uploaded-label'}>Uploaded Successfully!</p>\r\n      <img src={props.imageUrl} className={'uploaded-img'} alt=\"\" />\r\n      <div className={'container-input-copy'}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          value={props.imageUrl}\r\n          id=\"url-link-input\"\r\n          className={'copy-input'}\r\n        />\r\n        <button onClick={copyFromInput} className={'copy-button'}>\r\n          Copy Link\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Uploaded\r\n","D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\components\\DragAndDrop.js",["48","49","50","51"],"import React from 'react'\r\nimport { useState, useCallback } from 'react'\r\nimport '../assets/styles/dragAndDrop.css'\r\nimport image from '../assets/images/image.svg'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport validateExtension from '../utils/validateExtension'\r\nimport { uploadImage } from '../utils/api/upload'\r\n\r\nconst DragAndDrop = (props) => {\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    acceptedFiles.forEach((file) => {\r\n      if (validateExtension(file)) {\r\n        const reader = new FileReader()\r\n\r\n        reader.onabort = () => console.log('file reading was aborted')\r\n        reader.onerror = () => console.log('file reading has failed')\r\n        reader.onload = () => {\r\n          const binaryStr = reader.result\r\n          const config = {\r\n            headers: { 'Content-Type': 'multipart/form-data' },\r\n          }\r\n          let data = new FormData()\r\n          data.append(\r\n            'image',\r\n            new Blob([binaryStr], { type: 'image/jpeg' }),\r\n            new Date().toJSON() + '.jpeg'\r\n          )\r\n          uploadImage(data, config, props.setters)\r\n        }\r\n        reader.readAsArrayBuffer(file)\r\n      }\r\n    })\r\n  }, [])\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n  return (\r\n    <div className={'drop_zone'} {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {/* {isDragActive ? <p>agrega tus archivos</p> : <p>archivo</p>} */}\r\n      <img src={image} />\r\n      <p>Drag and Drop your image here</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DragAndDrop\r\n","D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\utils\\api\\upload.js",[],"D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\utils\\CopyFromInput.js",[],"D:\\alex\\programacion\\DevChallenges\\ImageUploader\\frontend\\image-uploader\\src\\utils\\validateExtension.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":11,"column":10,"nodeType":"58","messageId":"59","endLine":11,"endColumn":15},{"ruleId":"56","severity":1,"message":"60","line":11,"column":17,"nodeType":"58","messageId":"59","endLine":11,"endColumn":25},{"ruleId":"56","severity":1,"message":"61","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":20},{"ruleId":"62","severity":1,"message":"63","line":11,"column":7,"nodeType":"64","endLine":11,"endColumn":57},{"ruleId":"56","severity":1,"message":"65","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":33,"column":6,"nodeType":"68","endLine":33,"endColumn":8,"suggestions":"69"},{"ruleId":"56","severity":1,"message":"70","line":34,"column":40,"nodeType":"58","messageId":"59","endLine":34,"endColumn":52},{"ruleId":"62","severity":1,"message":"63","line":40,"column":7,"nodeType":"64","endLine":40,"endColumn":26},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'image' is assigned a value but never used.","Identifier","unusedVar","'setImage' is assigned a value but never used.","'imagenPrueba' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props.setters'. Either include it or remove the dependency array.","ArrayExpression",["73"],"'isDragActive' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [props.setters]",{"range":"76","text":"77"},[1178,1180],"[props.setters]"]